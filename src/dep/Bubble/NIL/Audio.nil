class TAudioInstance
	private string buftag
	
	void CONSTRUCTOR(string audio,bool loop)
		self.buftag = Bubble_Audio:IPlay(audio,loop)
	end
	
	void DESTRUCTOR()
		Bubble_Audio:FreeInstance(self.buftag)
	end
	
	void Stop()
		Bubble_Audio:StopInstance(self.buftag)
	end
	
	void Pause()
		Bubble_Audio:PauseInstance(self.buftag)
	end
	
	void Resume()
		Bubble_Audio:ResumeInstance(self.buftag)
	end
	
end

class TAudio
	private bool dbg=true;

	private bool autodel
	private string buftag
	
	void CONSTRUCTOR(string file,buftag)
		if file!="*GET*"
			self.buftag = Bubble_Audio:Load(file,buftag or "")			
			self.autodel = buftag==nil;
			print("NIL: "..file.." stored in "..self.buftag)
		else
			assert(type(buftag)=="string","Want audio tag")
			self.buftag=buftag
		end
	end
	
	void DESTRUCTOR()
		if self.autodel 
			Bubble_Audio:Free(self.buftag) 
			if self.dbg then print("Audio buffer "..self.buftag.." released") end
		end
	end
		
	
	void Play()
		Bubble_Audio:Play(self.buftag)
	end
	
	var IPlay()
		return new TAudioInstance(self.buftag,false)
	end
	
	var Loop()
		return new TAudioInstance(self.buftag,true)
	end

end

global var LoadAudio(string file,buftag)
	return new TAudio(file,buftag)
end
global var LoadSound
LoadSound=LoadAudio

global var GetAudio(string buftag)
	var ret
	ret = new TAudio("*GET*",buftag)
	return ret
end

global void FreeAudio(string buffer)
	Bubble_Audio:Free(buffer)
end

